<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.SpringBootSecurity.mapper.MemberDAO">
    
    <!-- 외부 조인을 사용하여 얻은 검색 결과에 대한 매핑을 정의한다. -->
    <resultMap type="Member" id="memberMap">
        <id property="no" column="no" />
        <result property="no" column="NO" />
        <result property="id" column="ID" />
        <result property="pw" column="PW" />
        <result property="name" column="NAME" />
        <result property="regDate" column="REG_DATE" />
        <result property="updDate" column="UDP_DATE" />
        <collection property="authList" resultMap="authMap">
        </collection>
    </resultMap>
    <resultMap type="MemberAuth" id="authMap">
        <result property="no" column="NO" />
        <result property="auth" column="AUTH" />
    </resultMap>
    <!-- 데이터베이스에서 기본키를 인수로 전달한 자바빈의 프로퍼티를 통해 취득한다. -->
    <!-- <insert id="insert" useGeneratedKeys="true" keyProperty="no"> -->
    <!-- parameterType 생략 가능 -->
    <insert id="insert" parameterType="Member">
        <!-- MyMember에 no에 미리 값을 넣는다 -->
        <selectKey keyProperty="no" resultType="int"
            order="BEFORE"> SELECT SECURITYMEMBER_SEQ.NEXTVAL FROM DUAL 
        </selectKey> 
        INSERT INTO SECURITYMEMBER (NO, ID, PW, NAME) VALUES(#{no}, #{id}, #{pw}, #{name}) 
    </insert>

    <insert id="insertAuth" parameterType="MemberAuth">
        INSERT INTO SECURITYMEMBER_AUTH (NO, AUTH)VALUES (#{no} , #{auth})
    </insert>

    <select id="selectAll" resultType="Member"> 
        SELECT NO, ID, PW, NAME, REG_DATE
        FROM SECURITYMEMBER ORDER BY REG_DATE DESC
    </select>

    <select id="selectJoin" resultMap="memberMap"> 
        SELECT MM.NO,MM.ID, PW, NAME, REG_DATE, UPD_DATE, AUTH
        FROM SECURITYMEMBER MM 
        LEFT OUTER JOIN SECURITYMEMBER_AUTH A ON MM.NO= A.NO
        WHERE MM.ID = #{id}
    </select>
    
    <update id="update"> UPDATE SECURITYMEMBER SET NAME = #{name} WHERE NO = #{no} </update>

    <delete id="delete"> DELETE FROM SECURITYMEMBER WHERE NO = #{no} </delete>

    <delete id="deleteAuth"> DELETE FROM SECURITYMEMBER_AUTH WHERE NO = #{no} </delete>

</mapper>